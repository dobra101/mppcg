anonymousSetCollectionExpression(elements) ::= <<
Set.of(<elements; separator=", ">)
>>

binaryExpression(lhs, rhs, operator) ::= <<
<lhs> <operator> <rhs>
>>

enumCollectionExpression(name, elements) ::= <<
private enum <name> {
    <elements; separator=", ">
}
>>

enumEntryExpression(name, enum) ::= <<
<enum>.<name>
>>

identifierExpression(name) ::= <<
<name>
>>

// TODO: implement
intervalExpression() ::= <<
>>

// TODO: add type
valueExpression(value) ::= <<
<value>
>>